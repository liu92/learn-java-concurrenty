plugins {
    id 'java'
}

group 'com.learn.concurrenty'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

/**
 * 指定仓库的路径
 * mavenCentral():表示使用中央仓库,即项目中的jar 会从中央仓库下载到本地指定目录中
 * c:/Users/Administrator/.gradle(可以在setting中gradle中 service directory path进行
 * 自定义配置)
 */

repositories {
    mavenCentral()
/* 指定本地仓库地址 */
//    maven { url "file://E:/githubrepo/releases" }
/* 指定的远程仓库 */
//    maven { url "http://mvnrepository.com/" }
// 阿里云 仓库
//     maven{ url 'http://maven.aliyun.com/nexus/content/groups/public/'}

//    maven{ url 'https://maven.aliyun.com/repository/central'}
}

// 这个是进行统一仓库
//allprojects{
//    repositories {
//        google()
//        def ALIYUN_REPOSITORY_URL = 'http://maven.aliyun.com/nexus/content/groups/public'
//        def ALIYUN_JCENTER_URL = 'http://maven.aliyun.com/nexus/content/repositories/jcenter'
//        all { ArtifactRepository repo ->
//            if(repo instanceof MavenArtifactRepository){
//                def url = repo.url.toString()
//                if (url.startsWith('https://repo1.maven.org/maven2')) {
//                    project.logger.lifecycle "Repository ${repo.url} replaced by $ALIYUN_REPOSITORY_URL."
//                    remove repo
//                }
//                if (url.startsWith('https://jcenter.bintray.com/')) {
//                    project.logger.lifecycle "Repository ${repo.url} replaced by $ALIYUN_JCENTER_URL."
//                    remove repo
//                }
//            }
//        }
//        maven { url ALIYUN_REPOSITORY_URL }
//        maven { url ALIYUN_JCENTER_URL }
//
//    }
//}

/**
 * gradle 工厂所有的jar包的坐标都在dependencies属性内放置
 * 每一个jar包的坐标 都有三个基本元素:
 * group,name,version
 * 类似于maven中的 <groupId>,<artifactId>,<version>
 *  testCompile:表示该jar包，在测试的时候起作用，该属性为jar包的作用域
 *  所有我们在添加jar包坐标的时候，都要带上jar包的作用域
 *
 * //单个依赖
 * //compile group:'log4j', name:'log4j', version:'1.2.17'
 * // 简写 => compile 'log4j:log4j:1.2.17'
 *
 * //以数组形式添加多个依赖
 * // compile 'joda-time:joda-time:2.9.2', 'log4j:log4j:1.2.17'
 *
 * //闭包形式，以添加额外配置
 *  compile (group:'log4j', name:'log4j', version:'1.2.17'){
 *  // ... 额外配置
 * //    }
 *
 * //等价于
 *  compile ('log4j:log4j:1.2.17'){
 *  // ... 额外配置
 * //    }
 */
dependencies {
//    compile group: 'org.quartz-scheduler', name: 'quartz', version: '2.3.2'
//    compile('org.quartz-scheduler:quartz:2.3.2')
    testCompile group: 'junit', name: 'junit', version: '4.12'


}
